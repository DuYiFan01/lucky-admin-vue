package ${package.Controller};

import cn.anlucky.luckyadmin.system.annotation.Log;
import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import lombok.RequiredArgsConstructor;


/**
 * $!{table.comment} 前端控制器
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequiredArgsConstructor
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end
#else
    #if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
    #else
public class ${table.controllerName} {
    #end

    private final ${table.serviceName} ${table.entityPath}Service;

    /**
     * 查询所有
     * @return
     */
    @SaCheckPermission("${package.ModuleName}::${params}::list")
    @PostMapping("/list")
    public R list() {
        List<${entity}> list = ${table.entityPath}Service.list();
        return R.ok(list);
    }

    /**
    * 条件分页查询
    * @param ${table.entityPath}
    * @return
    */
    @SaCheckPermission("${package.ModuleName}::${params}::list")
    @PostMapping("/pageByParams")
    public R listByPage(@RequestBody ${entity} ${table.entityPath}) {
        startPage();
        List<${entity}> list = ${table.entityPath}Service.pageByParams(${table.entityPath});
        PageDataVo tableData = getTableData(list);
        return R.ok(tableData);
    }

    /**
    * id查询一个
    * @param id
    * @return
    */
    @SaCheckPermission("${package.ModuleName}::${params}::list")
    @GetMapping("/get/{id}")
    public R getById(@PathVariable(name = "id") Serializable id) {
        ${entity} ${table.entityPath} = ${table.entityPath}Service.getById(id);
        return R.ok(${table.entityPath});
    }

    /**
    * 新增
    * @param ${table.entityPath}
    * @return
    */
    @SaCheckPermission("${package.ModuleName}::${params}::insert")
    @Log(title = "$!{table.comment}", businessType = BusinessType.INSERT)
    @PostMapping("/save")
    public R save(@RequestBody ${entity} ${table.entityPath}) {
        if(${table.entityPath}Service.getById(${table.entityPath}.getId())!=null){
            throw new CustomException("ID已存在");
        }
        ${table.entityPath}Service.save(${table.entityPath});
        return R.ok("添加成功");
    }

    /**
    * 修改所有字段为新值
    * @param ${table.entityPath}
    * @return
    */
    @SaCheckPermission("${package.ModuleName}::${params}::update")
    @Log(title = "$!{table.comment}", businessType = BusinessType.UPDATE)
    @PostMapping("/updateAllById")
    public R updateAllById(@RequestBody ${entity} ${table.entityPath}) {
        ${table.entityPath}Service.updateAllById(${table.entityPath});
        return R.ok("修改成功");
    }

    /**
    * 修改指定字段为新值
    * @param ${table.entityPath}
    * @return
    */
    @SaCheckPermission("${package.ModuleName}::${params}::update")
    @Log(title = "$!{table.comment}", businessType = BusinessType.UPDATE)
    @PostMapping("/updateSpecifyById")
    public R updateSpecifyById(@RequestBody ${entity} ${table.entityPath}) {
        ${table.entityPath}Service.updateSpecifyById(${table.entityPath});
        return R.ok("修改成功");
    }

    /**
    * 批量删除和删除
    * @param ids
    * @return
    */
    @SaCheckPermission("${package.ModuleName}::${params}::delete")
    @Log(title = "$!{table.comment}", businessType = BusinessType.DELETE)
    @GetMapping("/delete/{ids}")
    public R deleteByIds(@PathVariable(name = "ids") Serializable[] ids) {
        if (ids.length <= 0){
            throw new CustomException("请选择要删除的数据");
        }
        ${table.entityPath}Service.removeBatchByIds(Arrays.asList(ids));
        return R.ok("删除成功");
    }

}
#end
